name: oneApi-windows
description: Install Intel oneAPI
inputs:
  WINDOWS_HPCKIT_URL: 
    description: 'URL to download the Intel oneAPI HPC Toolkit for Windows'
    default: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/f07e32fa-b505-4b90-8a79-e328ce9ad9d6/intel-oneapi-hpc-toolkit-2025.0.0.822_offline.exe
    required: false
  WINDOWS_CPP_COMPONENTS: # If more than one component required then separate them with : (colon)
    description: 'Components to install for Intel oneAPI C++ compiler for Windows'
    default: intel.oneapi.win.cpp-dpcpp-common
    required: false
  LINUX_HPCKIT_URL:
    description: 'URL to download the Intel oneAPI HPC Toolkit for Linux'
    default: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/0884ef13-20f3-41d3-baa2-362fc31de8eb/intel-oneapi-hpc-toolkit-2025.0.0.825_offline.sh
    required: false
  LINUX_COMPONENTS: 
    description: 'Components to install for Intel oneAPI C++ compiler for Linux'
    default: intel-oneapi-dpcpp-cpp-compiler
    required: false
  

runs:
  using: composite
  steps:
  - uses: actions/checkout@v4
  - name: Check cache for Intel oneAPI
    id: cache-install
    uses: actions/cache@v4
    with:
      path: |
          /opt/intel/oneapi
      key: install-${{ inputs.LINUX_HPCKIT_URL }}-${{ inputs.LINUX_COMPONENTS }}-${{ hashFiles('${{ github.action_path }}/action.yml') }}
  
  - name: Install Intel oneAPI
    if: steps.cache-install.outputs.cache-hit != 'true'
    run: |
      ${{ github.action_path }}/install-oneAPI.sh ${{ inputs.LINUX_HPCKIT_URL }}  ${{ inputs.LINUX_COMPONENTS }}
    shell: bash

  - name: Make oneapi available
    run: |
      for var in $(compgen -v); do
          eval "before_$var=\"\$$var\""
      done

      source /opt/intel/oneapi/setvars.sh

      # Compare and echo the environment variables that are new or have changed
      for var in $(compgen -v); do
          before_var="before_$var"
          if [[ "$var" != before_* ]] && [ "${!before_var}" != "${!var}" ]; then
              echo "Updating $var"
              echo "$var=${!var}" >> "$GITHUB_ENV"
          fi
      done
    shell: bash

  

  