# Generated from ./make.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,88,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,1,1,
        1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,4,4,37,8,4,11,4,12,4,38,4,4,41,8,4,
        11,4,12,4,42,1,5,1,5,1,6,1,6,1,6,1,6,5,6,51,8,6,10,6,12,6,54,9,6,
        1,6,1,6,1,7,1,7,1,8,1,8,4,8,62,8,8,11,8,12,8,63,1,9,1,9,5,9,68,8,
        9,10,9,12,9,71,9,9,1,9,1,9,1,9,1,9,1,10,3,10,78,8,10,1,10,1,10,1,
        11,4,11,83,8,11,11,11,12,11,84,1,11,1,11,0,0,12,1,1,3,2,5,3,7,4,
        9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,1,0,7,6,0,36,37,40,42,
        47,47,60,60,63,64,94,94,4,0,48,57,65,90,95,95,97,122,3,0,10,10,13,
        13,34,34,4,0,42,42,59,59,62,62,124,124,1,0,32,32,2,0,10,10,13,13,
        2,0,9,9,32,32,96,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
        0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
        0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,1,25,1,0,0,0,3,27,1,0,0,0,
        5,29,1,0,0,0,7,31,1,0,0,0,9,40,1,0,0,0,11,44,1,0,0,0,13,46,1,0,0,
        0,15,57,1,0,0,0,17,59,1,0,0,0,19,65,1,0,0,0,21,77,1,0,0,0,23,82,
        1,0,0,0,25,26,5,46,0,0,26,2,1,0,0,0,27,28,5,58,0,0,28,4,1,0,0,0,
        29,30,5,61,0,0,30,6,1,0,0,0,31,32,5,46,0,0,32,33,5,46,0,0,33,8,1,
        0,0,0,34,41,7,0,0,0,35,37,7,1,0,0,36,35,1,0,0,0,37,38,1,0,0,0,38,
        36,1,0,0,0,38,39,1,0,0,0,39,41,1,0,0,0,40,34,1,0,0,0,40,36,1,0,0,
        0,41,42,1,0,0,0,42,40,1,0,0,0,42,43,1,0,0,0,43,10,1,0,0,0,44,45,
        5,92,0,0,45,12,1,0,0,0,46,52,5,34,0,0,47,51,8,2,0,0,48,49,5,92,0,
        0,49,51,9,0,0,0,50,47,1,0,0,0,50,48,1,0,0,0,51,54,1,0,0,0,52,50,
        1,0,0,0,52,53,1,0,0,0,53,55,1,0,0,0,54,52,1,0,0,0,55,56,5,34,0,0,
        56,14,1,0,0,0,57,58,7,3,0,0,58,16,1,0,0,0,59,61,5,45,0,0,60,62,8,
        4,0,0,61,60,1,0,0,0,62,63,1,0,0,0,63,61,1,0,0,0,63,64,1,0,0,0,64,
        18,1,0,0,0,65,69,5,35,0,0,66,68,8,5,0,0,67,66,1,0,0,0,68,71,1,0,
        0,0,69,67,1,0,0,0,69,70,1,0,0,0,70,72,1,0,0,0,71,69,1,0,0,0,72,73,
        3,21,10,0,73,74,1,0,0,0,74,75,6,9,0,0,75,20,1,0,0,0,76,78,5,13,0,
        0,77,76,1,0,0,0,77,78,1,0,0,0,78,79,1,0,0,0,79,80,5,10,0,0,80,22,
        1,0,0,0,81,83,7,6,0,0,82,81,1,0,0,0,83,84,1,0,0,0,84,82,1,0,0,0,
        84,85,1,0,0,0,85,86,1,0,0,0,86,87,6,11,0,0,87,24,1,0,0,0,10,0,38,
        40,42,50,52,63,69,77,84,1,6,0,0
    ]

class makeLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    WORD = 5
    BACKSLASH = 6
    STRING = 7
    BASHOP = 8
    FLAG = 9
    COMMENT = 10
    NEWLINE = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "':'", "'='", "'..'", "'\\'" ]

    symbolicNames = [ "<INVALID>",
            "WORD", "BACKSLASH", "STRING", "BASHOP", "FLAG", "COMMENT", 
            "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "WORD", "BACKSLASH", "STRING", 
                  "BASHOP", "FLAG", "COMMENT", "NEWLINE", "WS" ]

    grammarFileName = "make.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


